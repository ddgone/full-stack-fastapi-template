"""重命名item为project

Revision ID: 670430b7d2e6
Revises: f2d395336747
Create Date: 2025-10-21 17:04:05.681288

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '670430b7d2e6'
down_revision = 'f2d395336747'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_collaborator_association',
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'user_id')
    )

    op.add_column('task', sa.Column('project_id', sa.Uuid(), nullable=False))
    op.drop_constraint(op.f('task_item_id_fkey'), 'task', type_='foreignkey')
    op.create_foreign_key('task_project_id_fkey', 'task', 'project', ['project_id'], ['id'])
    op.drop_column('task', 'item_id')

    op.drop_table('item_collaborator_association')
    op.drop_table('item')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('item',
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='item_owner_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='item_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('item_collaborator_association',
    sa.Column('item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], name=op.f('item_collaborator_association_item_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('item_collaborator_association_user_id_fkey')),
    sa.PrimaryKeyConstraint('item_id', 'user_id', name=op.f('item_collaborator_association_pkey'))
    )
    op.add_column('task', sa.Column('item_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint('task_project_id_fkey', 'task', type_='foreignkey')
    op.create_foreign_key(op.f('task_item_id_fkey'), 'task', 'item', ['item_id'], ['id'])
    op.drop_column('task', 'project_id')

    op.drop_table('project_collaborator_association')
    op.drop_table('project')
    # ### end Alembic commands ###
